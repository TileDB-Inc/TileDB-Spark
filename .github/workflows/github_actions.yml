name: TileDB-Spark

on:
  push:
    tags:
      - '*'
    branches:
      - 'master'
  pull_request:

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-10.15 ]

    steps:
      - uses: actions/checkout@v2
      - run: unset SYSTEM; ./gradlew checkFormat;
        shell: bash
        name: checkFormat
      - run: unset SYSTEM; ./gradlew assemble;
        shell: bash
        name: assemble
      - run: unset SYSTEM; ./gradlew test;
        name: test
        shell: bash

  Release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [Test]
    name: Create-Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true

      - uses: notlmn/release-with-changelog@v2
        with:
          header: 'Changes:'
          include-hash: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create-Jars
        run: unset SYSTEM; set +e; ./gradlew assemble; ./gradlew shadowJar; mkdir jars/; cp ./build/libs/*.jar jars/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: jars/*.jar
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.tag_name }}
          draft: false
          prerelease: false

  Maven:
    needs: [ Release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true
      - name: Upload to maven
        run: |
          chmod +x ./ci/upload_to_maven.sh
          ./ci/upload_to_maven.sh
        shell: bash
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_SECRET_KEYS_ENC: ${{ secrets.GPG_SECRET_KEYS_ENC }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}